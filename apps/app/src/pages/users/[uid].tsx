import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { useInterval } from "usehooks-ts";
import { useState } from "react";
import { useRouter } from "next/router";
import { getCurrentlyPlayingTrackFromToken } from "@/pages/api/refresh_token";

type Props = {
  name: string;
  image: string;
};

const User: NextPage<Props> = (props: Props) => {
  const { name, image } = props;
  const [trackName, setTrackName] = useState(name);
  const [trackImage, setTrackImage] = useState(image);
  const router = useRouter();

  useInterval(() => {
    fetch(`api/refresh_token/?uid=${router.query.uid as string}`).then(
      (res) => {
        res.json().then((data) => {
          const album = data.item.album;
          setTrackName(album.name as string);
          setTrackImage(album.images[0].url as string);
        });
      }
    );
  }, 10 * 1000);

  return (
    <>
      <Head>
        <title>{trackName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={"h-screen bg-black flex justify-center items-center"}>
        <h1 className={"hidden text-3xl"}>{trackName}</h1>
        <img src={trackImage} alt="" />
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async (
  context
) => {
  const data = await getCurrentlyPlayingTrackFromToken(
    context.query.uid as string
  );
  const album = data.item.album;

  return {
    props: {
      name: album.name as string,
      image: album.images[0].url as string,
    },
  };
};

export default User;
