import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { getCurrentlyPlayingTrackFromToken } from "./api/refresh_token";
import { useInterval } from "usehooks-ts";
import { useState } from "react";

type Props = {
  name: string;
  image: string;
};

const Home: NextPage<Props> = (props: Props) => {
  const { name, image } = props;
  const [trackName, setTrackName] = useState(name);
  const [trackImage, setTrackImage] = useState(image);

  useInterval(() => {
    fetch(
      "api/refresh_token/?refresh_token=AQDWpCB3mG1vYSqGaGaeeFtWfKXzzNHZ2QVfqUASdASj3vgXFqMVFCvalYYVLnvp6QVBCnnn3b5Mhh-M_HTQOkoMNqjKAgwKhyklUCkTeaDxaDnDWlht_Q2nVGjHZRCxzeI"
    ).then((res) => {
      res.json().then((data) => {
        const album = data.item.album;
        setTrackName(album.name as string);
        setTrackImage(album.images[0].url as string);
      });
    });
  }, 10 * 1000);

  return (
    <>
      <Head>
        <title>{trackName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={"h-screen bg-black flex justify-center items-center"}>
        <h1 className={"hidden text-3xl"}>{trackName}</h1>
        <img src={trackImage} alt="" />
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async (
  context
) => {
  const data = await getCurrentlyPlayingTrackFromToken(
    "AQDWpCB3mG1vYSqGaGaeeFtWfKXzzNHZ2QVfqUASdASj3vgXFqMVFCvalYYVLnvp6QVBCnnn3b5Mhh-M_HTQOkoMNqjKAgwKhyklUCkTeaDxaDnDWlht_Q2nVGjHZRCxzeI"
  );
  const album = data.item.album;

  return {
    props: {
      name: album.name as string,
      image: album.images[0].url as string,
    },
  };
};

export default Home;
